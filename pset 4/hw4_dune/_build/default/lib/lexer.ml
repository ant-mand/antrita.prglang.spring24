# 1 "lib/lexer.mll"
 
open Parser

# 6 "lib/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\236\255\075\000\022\000\037\000\021\000\019\000\029\000\
    \036\000\000\000\038\000\043\000\038\000\007\000\000\000\250\255\
    \251\255\011\000\252\255\253\255\254\255\001\000\249\255\000\000\
    \042\000\027\000\044\000\248\255\037\000\244\255\040\000\034\000\
    \049\000\247\255\039\000\043\000\246\255\240\255\001\000\245\255\
    \054\000\042\000\046\000\043\000\058\000\243\255\061\000\062\000\
    \242\255\061\000\063\000\241\255\048\000\239\255\054\000\058\000\
    \238\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\018\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\009\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\255\255\000\000\000\000\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\021\000\021\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \021\000\021\000\000\000\000\000\000\000\000\000\018\000\000\000\
    \020\000\019\000\000\000\000\000\000\000\014\000\016\000\000\000\
    \009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\015\000\000\000\000\000\000\000\022\000\037\000\
    \000\000\000\000\003\000\000\000\000\000\007\000\011\000\000\000\
    \000\000\008\000\000\000\000\000\000\000\000\000\004\000\000\000\
    \005\000\000\000\000\000\006\000\012\000\000\000\000\000\000\000\
    \000\000\000\000\010\000\040\000\000\000\000\000\000\000\000\000\
    \000\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\054\000\052\000\049\000\
    \046\000\043\000\039\000\034\000\030\000\023\000\024\000\028\000\
    \026\000\027\000\022\000\029\000\031\000\032\000\033\000\038\000\
    \025\000\035\000\036\000\041\000\042\000\037\000\044\000\045\000\
    \047\000\048\000\050\000\051\000\053\000\055\000\056\000\000\000\
    \000\000\000\000\000\000\000\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\018\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\017\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\021\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\021\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\255\255\255\255\255\255\000\000\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\014\000\009\000\
    \255\255\255\255\000\000\255\255\255\255\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\038\000\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\003\000\004\000\005\000\
    \006\000\007\000\008\000\010\000\011\000\013\000\012\000\024\000\
    \025\000\026\000\023\000\028\000\030\000\031\000\032\000\008\000\
    \012\000\034\000\035\000\040\000\041\000\042\000\043\000\044\000\
    \046\000\047\000\049\000\050\000\052\000\054\000\055\000\255\255\
    \255\255\255\255\255\255\255\255\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\017\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec read lexbuf =
   __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 15 "lib/lexer.mll"
            ( read lexbuf )
# 142 "lib/lexer.ml"

  | 1 ->
# 16 "lib/lexer.mll"
          ( LP )
# 147 "lib/lexer.ml"

  | 2 ->
# 17 "lib/lexer.mll"
          ( RP )
# 152 "lib/lexer.ml"

  | 3 ->
# 18 "lib/lexer.mll"
          ( LAM )
# 157 "lib/lexer.ml"

  | 4 ->
# 19 "lib/lexer.mll"
          ( DOT )
# 162 "lib/lexer.ml"

  | 5 ->
# 20 "lib/lexer.mll"
          ( COLON )
# 167 "lib/lexer.ml"

  | 6 ->
# 21 "lib/lexer.mll"
            ( ARROW )
# 172 "lib/lexer.ml"

  | 7 ->
# 22 "lib/lexer.mll"
             ( TRUE )
# 177 "lib/lexer.ml"

  | 8 ->
# 23 "lib/lexer.mll"
              ( FALSE )
# 182 "lib/lexer.ml"

  | 9 ->
# 24 "lib/lexer.mll"
                   (ZERO)
# 187 "lib/lexer.ml"

  | 10 ->
# 25 "lib/lexer.mll"
           ( IF )
# 192 "lib/lexer.ml"

  | 11 ->
# 26 "lib/lexer.mll"
             ( THEN )
# 197 "lib/lexer.ml"

  | 12 ->
# 27 "lib/lexer.mll"
             ( ELSE )
# 202 "lib/lexer.ml"

  | 13 ->
# 28 "lib/lexer.mll"
             ( SUCC )
# 207 "lib/lexer.ml"

  | 14 ->
# 29 "lib/lexer.mll"
             ( PRED )
# 212 "lib/lexer.ml"

  | 15 ->
# 30 "lib/lexer.mll"
                      (ISZERO)
# 217 "lib/lexer.ml"

  | 16 ->
# 31 "lib/lexer.mll"
            ( NAT )
# 222 "lib/lexer.ml"

  | 17 ->
# 32 "lib/lexer.mll"
             ( BOOL )
# 227 "lib/lexer.ml"

  | 18 ->
# 33 "lib/lexer.mll"
         ( VAR (Lexing.lexeme lexbuf) )
# 232 "lib/lexer.ml"

  | 19 ->
# 34 "lib/lexer.mll"
          ( EOF )
# 237 "lib/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

;;

